{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sguntaka\\\\source\\\\repos\\\\react-routing\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './NewCommentForm.module.css';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    addCommentHandler\n  } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      addCommentHandler();\n    }\n  }, [status, error, addCommentHandler]);\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const comment = commentTextRef.current.value;\n    sendRequest({\n      commentData: {\n        text: comment\n      },\n      quoteId: props.quoteId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"rrUMherR02yJakEJQDrW1gimKKY=\", false, function () {\n  return [useHttp];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useEffect","useRef","useHttp","classes","addComment","LoadingSpinner","NewCommentForm","props","commentTextRef","sendRequest","status","error","addCommentHandler","submitFormHandler","event","preventDefault","comment","current","value","commentData","text","quoteId","form","control","actions"],"sources":["C:/Users/sguntaka/source/repos/react-routing/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './NewCommentForm.module.css';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error}= useHttp(addComment);\n  const {addCommentHandler} = props;\n\n  useEffect(()=>{\n    if(status==='completed' && !error){\n      addCommentHandler();\n    }\n  }, [status,error, addCommentHandler])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const comment = commentTextRef.current.value;\n    sendRequest({commentData:{text:comment}, quoteId : props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,cAAc,MAAM,sBAAsB;AAAC;AAElD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAMC,cAAc,GAAGP,MAAM,EAAE;EAC/B,MAAM;IAACQ,WAAW;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAET,OAAO,CAACE,UAAU,CAAC;EACvD,MAAM;IAACQ;EAAiB,CAAC,GAAGL,KAAK;EAEjCP,SAAS,CAAC,MAAI;IACZ,IAAGU,MAAM,KAAG,WAAW,IAAI,CAACC,KAAK,EAAC;MAChCC,iBAAiB,EAAE;IACrB;EACF,CAAC,EAAE,CAACF,MAAM,EAACC,KAAK,EAAEC,iBAAiB,CAAC,CAAC;EAErC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,OAAO,GAAGR,cAAc,CAACS,OAAO,CAACC,KAAK;IAC5CT,WAAW,CAAC;MAACU,WAAW,EAAC;QAACC,IAAI,EAACJ;MAAO,CAAC;MAAEK,OAAO,EAAGd,KAAK,CAACc;IAAO,CAAC,CAAC;EACpE,CAAC;EAED,oBACE;IAAM,SAAS,EAAElB,OAAO,CAACmB,IAAK;IAAC,QAAQ,EAAET,iBAAkB;IAAA,WACxDH,MAAM,KAAK,SAAS,iBACnB;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErB,eACD;MAAK,SAAS,EAAEP,OAAO,CAACoB,OAAQ;MAAC,QAAQ,EAAEV,iBAAkB;MAAA,wBAC3D;QAAO,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC7C;QAAU,EAAE,EAAC,SAAS;QAAC,IAAI,EAAC,GAAG;QAAC,GAAG,EAAEL;MAAe;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D,eACN;MAAK,SAAS,EAAEL,OAAO,CAACqB,OAAQ;MAAA,uBAC9B;QAAQ,SAAS,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAjCIlB,cAAc;EAAA,QAEkBJ,OAAO;AAAA;AAAA,KAFvCI,cAAc;AAmCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}